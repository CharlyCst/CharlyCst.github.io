<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Charly Castes</title>
    <link>https://charlycst.github.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on Charly Castes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Feb 2020 15:27:06 +0100</lastBuildDate>
    
	<atom:link href="https://charlycst.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Speeding up pattern matching with WebAssembly</title>
      <link>https://charlycst.github.io/posts/speeding-up-pattern-matching/</link>
      <pubDate>Sun, 09 Feb 2020 15:27:06 +0100</pubDate>
      
      <guid>https://charlycst.github.io/posts/speeding-up-pattern-matching/</guid>
      <description>I while ago I was tasked to find predefined patterns in strings, a well known problem in computer science. Our algorithm was running on AWS Lambda using the Node.js runtime, and, considering that we sometimes needed to search through billions of strings, performances of this algorithm were crucial.
On the other hand I recently paid a lot of attention to WebAssembly and Rust, both technologies seem really promising and attract a growing interest from developers.</description>
    </item>
    
    <item>
      <title>Let&#39;s (re)code React</title>
      <link>https://charlycst.github.io/posts/micro-react/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://charlycst.github.io/posts/micro-react/</guid>
      <description>With more than 140k stars on Github at the time of writing, React is arguably one of the most used and loved web framework, but did you ever asked yourself how it works under the hood? Well you may know that there is this virtual DOM thing, and a certain reconciliation algorithm, but how do they work exactly? The best way to find out is probably to (re)code React by ourselves, let&amp;rsquo;s get started!</description>
    </item>
    
  </channel>
</rss>